{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\IronHack\\\\Bootcamp\\\\w9Project\\\\buono-gelato-client\\\\src\\\\components\\\\clients\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    address: \"\",\n    city: \"\",\n    postcode: \"\",\n    vat: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [passwordError, setPasswordErr] = useState(\"\");\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handlePasswordChange = event => {\n    const passwordInputValue = event.target.value.trim();\n    const passwordInputFieldName = event.target.name;\n    const NewPasswordInput = { ...passwordInput,\n      [passwordInputFieldName]: passwordInputValue\n    };\n    setPasswordInput(NewPasswordInput);\n  };\n\n  const handleValidation = event => {\n    const passwordInputValue = event.target.value.trim();\n    const passwordInputFieldName = event.target.name; //for password \n\n    if (passwordInputFieldName === 'password') {\n      const uppercaseRegExp = /(?=.*?[A-Z])/;\n      const lowercaseRegExp = /(?=.*?[a-z])/;\n      const digitsRegExp = /(?=.*?[0-9])/;\n      const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n      const minLengthRegExp = /.{8,}/;\n      const passwordLength = passwordInputValue.length;\n      const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\n      const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\n      const digitsPassword = digitsRegExp.test(passwordInputValue);\n      const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n      const minLengthPassword = minLengthRegExp.test(passwordInputValue);\n      let errMsg = \"\";\n\n      if (passwordLength === 0) {\n        errMsg = \"Password is empty\";\n      } else if (!uppercasePassword) {\n        errMsg = \"At least one Uppercase\";\n      } else if (!lowercasePassword) {\n        errMsg = \"At least one Lowercase\";\n      } else if (!digitsPassword) {\n        errMsg = \"At least one digit\";\n      } else if (!specialCharPassword) {\n        errMsg = \"At least one Special Characters\";\n      } else if (!minLengthPassword) {\n        errMsg = \"At least minumum 8 characters\";\n      } else {\n        errMsg = \"\";\n      }\n\n      setPasswordErr(errMsg);\n    } // for confirm password\n\n\n    if (passwordInputFieldName === \"confirmPassword\" || passwordInputFieldName === \"password\" && passwordInput.confirmPassword.length > 0) {\n      if (passwordInput.confirmPassword !== passwordInput.password) {\n        setConfirmPasswordError(\"Confirm password is not matched\");\n      } else {\n        setConfirmPasswordError(\"\");\n      }\n    }\n  };\n\n  const handleUserState = event => {\n    setUser({ ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"firstName\",\n        type: \"text\",\n        value: user.firstName,\n        placeholder: \"First Name\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lastName\",\n        type: \"text\",\n        value: user.lastName,\n        placeholder: \"Last Name\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"address\",\n        type: \"text\",\n        value: user.address,\n        placeholder: \"Address\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"city\",\n        type: \"text\",\n        value: user.city,\n        placeholder: \"City\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"postcode\",\n        type: \"\",\n        value: user.postcode,\n        placeholder: \"ZIP Code\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"vat\",\n        type: \"number\",\n        value: user.tax,\n        placeholder: \"VAT Number\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        type: \"tel\",\n        value: user.phone,\n        placeholder: \"Phone Number\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"email\",\n        value: user.email,\n        placeholder: \"E-mail\",\n        onChange: handleUserState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        value: passwordInput.password,\n        placeholder: \"Password\",\n        onChange: handlePasswordChange,\n        onKeyUp: handleValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: passwordInput.confirmPassword,\n        placeholder: \"Confirm Password\",\n        onChange: handlePasswordChange,\n        onKeyUp: handleValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: confirmPasswordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"dh0dVizBRM18FJmGxJE0Oi5WUv0=\");\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/IronHack/Bootcamp/w9Project/buono-gelato-client/src/components/clients/Signup.js"],"names":["useState","Signup","user","setUser","firstName","lastName","address","city","postcode","vat","phone","email","passwordError","setPasswordErr","confirmPasswordError","setConfirmPasswordError","passwordInput","setPasswordInput","password","confirmPassword","handlePasswordChange","event","passwordInputValue","target","value","trim","passwordInputFieldName","name","NewPasswordInput","handleValidation","uppercaseRegExp","lowercaseRegExp","digitsRegExp","specialCharRegExp","minLengthRegExp","passwordLength","length","uppercasePassword","test","lowercasePassword","digitsPassword","specialCharPassword","minLengthPassword","errMsg","handleUserState","tax"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Signup() {\r\n  const [user, setUser] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    postcode: \"\",\r\n    vat: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\nconst [passwordError, setPasswordErr] = useState(\"\");\r\nconst [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\nconst [passwordInput, setPasswordInput]= useState({\r\n    password:'',\r\n    confirmPassword:''\r\n})\r\nconst handlePasswordChange =(event)=>{\r\n  const passwordInputValue = event.target.value.trim();\r\n  const passwordInputFieldName = event.target.name;\r\n  const NewPasswordInput = {...passwordInput,[passwordInputFieldName]:passwordInputValue}\r\n  setPasswordInput(NewPasswordInput);\r\n  \r\n}\r\nconst handleValidation= (event)=>{\r\n  const passwordInputValue = event.target.value.trim();\r\n  const passwordInputFieldName = event.target.name;\r\n      //for password \r\nif(passwordInputFieldName==='password'){\r\n  const uppercaseRegExp   = /(?=.*?[A-Z])/;\r\n  const lowercaseRegExp   = /(?=.*?[a-z])/;\r\n  const digitsRegExp      = /(?=.*?[0-9])/;\r\n  const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\r\n  const minLengthRegExp   = /.{8,}/;\r\n  const passwordLength =      passwordInputValue.length;\r\n  const uppercasePassword =   uppercaseRegExp.test(passwordInputValue);\r\n  const lowercasePassword =   lowercaseRegExp.test(passwordInputValue);\r\n  const digitsPassword =      digitsRegExp.test(passwordInputValue);\r\n  const specialCharPassword = specialCharRegExp.test(passwordInputValue);\r\n  const minLengthPassword =   minLengthRegExp.test(passwordInputValue);\r\n  let errMsg =\"\";\r\n  if(passwordLength===0){\r\n          errMsg=\"Password is empty\";\r\n  }else if(!uppercasePassword){\r\n          errMsg=\"At least one Uppercase\";\r\n  }else if(!lowercasePassword){\r\n          errMsg=\"At least one Lowercase\";\r\n  }else if(!digitsPassword){\r\n          errMsg=\"At least one digit\";\r\n  }else if(!specialCharPassword){\r\n          errMsg=\"At least one Special Characters\";\r\n  }else if(!minLengthPassword){\r\n          errMsg=\"At least minumum 8 characters\";\r\n  }else{\r\n      errMsg=\"\";\r\n  }\r\n  setPasswordErr(errMsg);\r\n  }\r\n  // for confirm password\r\n  if(passwordInputFieldName=== \"confirmPassword\" || (passwordInputFieldName===\"password\" && passwordInput.confirmPassword.length>0) ){\r\n          \r\n      if(passwordInput.confirmPassword!==passwordInput.password)\r\n      {\r\n      setConfirmPasswordError(\"Confirm password is not matched\");\r\n      }else{\r\n      setConfirmPasswordError(\"\");\r\n      }\r\n      \r\n  }\r\n} \r\n\r\n  const handleUserState = (event) => {\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout\">\r\n      <h1>Signup</h1>\r\n      <form >\r\n        <input name=\"firstName\" type=\"text\" value={user.firstName} placeholder=\"First Name\" onChange={handleUserState}  />\r\n        <input name=\"lastName\" type=\"text\" value={user.lastName} placeholder=\"Last Name\" onChange={handleUserState} />\r\n        <input name=\"address\" type=\"text\" value={user.address} placeholder=\"Address\" onChange={handleUserState} />\r\n        <input name=\"city\" type=\"text\" value={user.city} placeholder=\"City\" onChange={handleUserState} />\r\n        <input name=\"postcode\" type=\"\" value={user.postcode} placeholder=\"ZIP Code\" onChange={handleUserState} />\r\n        <input name=\"vat\" type=\"number\" value={user.tax} placeholder=\"VAT Number\" onChange={handleUserState} />\r\n        <input name=\"phone\" type=\"tel\" value={user.phone} placeholder=\"Phone Number\" onChange={handleUserState} />\r\n        <input name=\"email\" type=\"email\" value={user.email} placeholder=\"E-mail\" onChange={handleUserState} />\r\n        <input name=\"password\" type=\"password\" value={passwordInput.password} placeholder=\"Password\" onChange={handlePasswordChange} onKeyUp={handleValidation}  /> \r\n        \r\n        <input\r\n          name=\"confirmPassword\"\r\n          type=\"password\"\r\n          value={passwordInput.confirmPassword}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={handlePasswordChange}\r\n          onKeyUp={handleValidation}\r\n        />\r\n        <p className=\"text-danger\">{passwordError}</p>\r\n        <p className=\"text-danger\">{confirmPasswordError}</p>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}