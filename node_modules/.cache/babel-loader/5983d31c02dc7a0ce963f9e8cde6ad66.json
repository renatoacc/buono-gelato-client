{"ast":null,"code":"var _jsxFileName = \"/Users/pickstudios/Desktop/ironhack/project-3/client/src/context/CountryProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CountryContext = /*#__PURE__*/createContext();\nexport function CountryProvider(props) {\n  _s();\n\n  const [country, setCountry] = useState(\"EN\");\n\n  const toggleTheme = () => {\n    if (country === \"EN\") {\n      setTheme(\"PT\");\n    } else {\n      setTheme(\"EN\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CountryContext.Provider, {\n    value: {\n      country,\n      toggleCountry\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountryProvider, \"dxV0LbiclGkE2kjOut30qfVSaEw=\");\n\n_c = CountryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryProvider\");","map":{"version":3,"sources":["/Users/pickstudios/Desktop/ironhack/project-3/client/src/context/CountryProvider.js"],"names":["createContext","useState","CountryContext","CountryProvider","props","country","setCountry","toggleTheme","setTheme","toggleCountry","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,cAAc,gBAAGF,aAAa,EAApC;AAEP,OAAO,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAIF,OAAO,KAAK,IAAhB,EAAsB;AACpBG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAND;;AAQA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAF;AAAWI,MAAAA;AAAX,KAAhC;AAAA,cACGL,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhBeP,e;;KAAAA,e","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const CountryContext = createContext();\n\nexport function CountryProvider(props) {\n  const [country, setCountry] = useState(\"EN\");\n\n  const toggleTheme = () => {\n    if (country === \"EN\") {\n      setTheme(\"PT\");\n    } else {\n      setTheme(\"EN\");\n    }\n  };\n\n  return (\n    <CountryContext.Provider value={{ country, toggleCountry }}>\n      {props.children}\n    </CountryContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}